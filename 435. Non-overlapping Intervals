class Solution {
public:
    int eraseOverlapIntervals(std::vector<std::vector<int>>& intervals) {
        if (intervals.empty()) {
            return 0;
        }

        std::sort(intervals.begin(), intervals.end(), [](const std::vector<int>& a, const std::vector<int>& b) {
            return a[1] < b[1];
        });

        int n = intervals.size();
        
        int kept_count = 1;
        
        int last_end = intervals[0][1];

        for (int i = 1; i < n; ++i) {
            int current_start = intervals[i][0];

            if (current_start >= last_end) {
                kept_count++;
                last_end = intervals[i][1];
            }
        }

        return n - kept_count;
    }
};
